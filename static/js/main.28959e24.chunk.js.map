{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JunPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","container","user_icon","iamge_icon","src","avatar","alt","arrow","massege_window","user_name","name","massege_text","message","massege_time","time","messageData","HW1","Affair","block","line_block","text","affair","priority","delete_btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","main_block","text_block","flex_btn","btn","setFilter","console","log","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","f","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","keyPress","inputClass","s","no_error","container_main","counter_users","input_btn_container","value","onChange","onKeyPress","some_btn","error_class","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","currentTarget","trim","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","placeholder","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checked","checkmark","HW4","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","lastValue","SuperSelect","options","onChangeOption","mappedOptions","o","i","SuperRadio","onChangeCallback","arr","HW7","PreJunior","Error404","Junior","JunPlus","PATH","Routes","path","exact","render","to","Header","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,eAAiB,gCAAgC,UAAY,2BAA2B,aAAe,8BAA8B,aAAe,8BAA8B,UAAY,6B,gBCA1RD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,WAAa,4BAA4B,SAAW,0BAA0B,IAAM,uB,gBCA/ID,EAAOC,QAAU,CAAC,UAAY,4BAA4B,eAAiB,iCAAiC,oBAAsB,sCAAsC,SAAW,2BAA2B,MAAQ,wBAAwB,SAAW,6B,kBCAzPD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,KAAO,qBAAqB,WAAa,6B,kBCAnGD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,UAAY,mC,iBCA3ED,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,WAAa,mCAAmC,UAAY,kCAAkC,cAAgB,sCAAsC,MAAQ,gC,iBCA9QD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,gBCAxFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,oBCA/DD,EAAOC,QAAU,CAAC,IAAM,mB,0RCyBTC,MAdf,SAAiBC,GACb,OACI,yBAAKC,UAAWC,IAAMC,WAClB,yBAAKF,UAAWC,IAAME,WAAW,yBAAKH,UAAWC,IAAMG,WAAYC,IAAMN,EAAMO,OAASC,IAAI,MAC5F,yBAAKP,UAAWC,IAAMO,QACtB,yBAAKR,UAAWC,IAAMQ,gBAClB,yBAAKT,UAAWC,IAAMS,WAAYX,EAAMY,MACxC,yBAAKX,UAAWC,IAAMW,cAAeb,EAAMc,SAC3C,yBAAKb,UAAWC,IAAMa,cAAef,EAAMgB,SCjBrDC,EACM,qFADNA,EAEI,SAFJA,EAGO,oCAHPA,EAII,QAuBKC,MApBf,WACI,OACI,6BACI,6BAEA,kBAAC,EAAD,CACIX,OAAQU,EACRL,KAAMK,EACNH,QAASG,EACTD,KAAMC,M,wBCKPE,MAff,SAAgBnB,GAIZ,OACI,yBAAKC,UAAWC,IAAMkB,OAClB,yBAAKnB,UAAWC,IAAMmB,YAClB,0BAAMpB,UAAWC,IAAMoB,MAAOtB,EAAMuB,OAAOX,MAC3C,0BAAMX,UAAWC,IAAMoB,MAAOtB,EAAMuB,OAAOC,UAC3C,4BAAQvB,UAAWC,IAAMuB,WAAYC,QAR1B,WACnB1B,EAAM2B,qBAAqB3B,EAAMuB,OAAOK,OAOhC,Q,gBCyBDC,MAhCf,SAAiB7B,GACb,IAAM8B,EAAgB9B,EAAM+B,KAAKC,KAAI,SAACC,GAAD,OACjC,kBAAC,EAAD,CACIC,IAAKD,EAAEL,IACPL,OAAQU,EACRN,qBAAsB3B,EAAM2B,0BAWpC,OACI,yBAAM1B,UAAWC,IAAMiC,YACnB,yBAAKlC,UAAWC,IAAMkC,YACrBN,GAEG,yBAAK7B,UAAWC,IAAMmC,UAC1B,4BAAQpC,UAAWC,IAAMoC,IAAKZ,QAbvB,WAAO1B,EAAMuC,UAAU,SAa9B,OACA,4BAAQtC,UAAWC,IAAMoC,IAAKZ,QAbtB,WAAO1B,EAAMuC,UAAU,UAa/B,QACA,4BAAQtC,UAAWC,IAAMoC,IAAKZ,QAbpB,WACdc,QAAQC,IAAI,OACZzC,EAAMuC,UAAU,YAWZ,UACA,4BAAQtC,UAAWC,IAAMoC,IAAKZ,QAXvB,WAAO1B,EAAMuC,UAAU,SAW9B,UCvBNG,EAAoC,CACtC,CAACd,IAAK,EAAGhB,KAAM,QAASY,SAAU,QAClC,CAACI,IAAK,EAAGhB,KAAM,QAASY,SAAU,OAClC,CAACI,IAAK,EAAGhB,KAAM,QAASY,SAAU,OAClC,CAACI,IAAK,EAAGhB,KAAM,OAAQY,SAAU,QACjC,CAACI,IAAK,EAAGhB,KAAM,aAAcY,SAAU,WAmD5BmB,MA7Bf,WACI,MAA8BC,mBAA4BF,GAA1D,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAqB,OAAjD,mBAAOG,EAAP,KAAeR,EAAf,KAEMS,EAtBmB,SAACH,EAA4BE,GAEtD,MAAe,SAAXA,EACOF,EAAQE,QAAO,SAAAE,GAAC,MAAmB,SAAfA,EAAEzB,YACX,WAAXuB,EACAF,EAAQE,QAAO,SAAAE,GAAC,MAAmB,WAAfA,EAAEzB,YACX,QAAXuB,EACAF,EAAQE,QAAO,SAAAE,GAAC,MAAmB,QAAfA,EAAEzB,YAEtBqB,EAaaK,CAAcL,EAASE,GAK/C,OAFAP,QAAQC,IAAI,UAAWO,GAGnB,6BACI,6BADJ,cAKI,kBAAC,EAAD,CACIjB,KAAMiB,EACNT,UAAWA,EACXZ,qBAbiB,SAACC,GAAD,OAAiBkB,EAVtB,SAACD,EAA4BjB,GACrD,OAAOiB,EAAQE,QAAO,SAAAI,GAAC,OAAIA,EAAEvB,MAAQA,KASoBwB,CAAaP,EAASjB,OAgBvE,6BAGA,+B,yBCnCGyB,EAhB+B,SAAC,GAEzC,IADDzC,EACA,EADAA,KAAM0C,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAAYC,EACnD,EADmDA,SAE9CC,EAAaH,EAAQI,IAAEJ,MAAQI,IAAEC,SAEvC,OACI,yBAAK5D,UAAW2D,IAAEE,gBACd,0BAAM7D,UAAW2D,IAAEG,eAAgBN,GACnC,yBAAKxD,UAAW2D,IAAEI,qBAClB,2BAAOC,MAAOrD,EAAMsD,SAAUZ,EAAiBrD,UAAW0D,EAAYQ,WAAYT,IAClF,4BAAQzD,UAAW2D,IAAEQ,SAAU1C,QAAS6B,GAAxC,QACA,0BAAMtD,UAAW2D,IAAES,aAAcb,EAAQ,sBAAuB,MC8B7Dc,EAxCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBACrE,EAAwB5B,mBAAiB,IAAzC,mBAAOhC,EAAP,KAAa6D,EAAb,KACA,EAA0B7B,oBAAkB,GAA5C,mBAAOY,EAAP,KAAckB,EAAd,KAYMnB,EAAU,WACC,KAAT3C,GACA+D,MAAM,SAAD,OAAU/D,EAAV,OACL4D,EAAgB5D,GAChB8D,GAAS,IAETA,GAAS,GAEbD,EAAQ,KAENhB,EAAac,EAAMK,OAEzB,OACI,kBAAC,EAAD,CAGIhE,KAAMA,EACN0C,gBA3BgB,SAACuB,GACrBJ,EAAQI,EAAEC,cAAcb,MAAMc,QAC9BL,GAAS,IA0BLnB,QAASA,EACTC,MAAOA,EACPC,WAAYA,EACZC,SA1BS,SAACmB,GACA,UAAVA,EAAE3C,KACFqB,Q,QCUGyB,MAxBf,WACI,MAA0BpC,mBAA0B,IAApD,mBAAO2B,EAAP,KAAcU,EAAd,KAOA,OACI,6BACI,6BADJ,cAKI,kBAAC,EAAD,CAAmBV,MAAOA,EAAOC,gBAXjB,SAAC5D,GACrB,IAAMsE,EAAmB,CAAEtD,IAAKuD,cAAMvE,KAAMA,GAC5CqE,EAAS,CAACC,GAAF,mBAAcX,QAWlB,6BAGA,+B,wHCgCGa,EA/C2C,SAAC,GAUtD,EARGC,KAQF,IAPEnB,EAOH,EAPGA,SAAUoB,EAOb,EAPaA,aACVnB,EAMH,EANGA,WAAYoB,EAMf,EANeA,QACZ/B,EAKH,EALGA,MACAvD,EAIH,EAJGA,UAAWuF,EAId,EAJcA,cAERC,EAEN,iBAeKC,EAAkB,UAAM9B,IAAEJ,MAAR,YAAiBgC,GAAgC,IACnEG,EAAmB,UAAM/B,IAAEgC,WAAR,YAAsB3F,GAAwB,IAEvE,OACI,yBAAKA,UAAW2D,IAAEzB,YACd,yCACIkD,KAAM,OACNnB,SArBa,SAACW,GACtBX,GACGA,EAASW,GAEZS,GAAgBA,EAAaT,EAAEC,cAAcb,QAkBrCE,WAhBe,SAACU,GACxBV,GAAcA,EAAWU,GAEzBU,GACa,UAAVV,EAAE3C,KACFqD,KAYKtF,UAAW0F,EACXE,YAAa,QAGTJ,IAEPjC,GAAS,0BAAMvD,UAAWyF,GAAqBlC,K,wDC7B7CsC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK9F,EAGR,EAHQA,UACFwF,EAEN,iBACKO,EAAc,UAAMD,EAAMnC,IAAEmC,IAAMnC,IAAEqC,QAAtB,YAAiChG,GAErD,OACI,0CACIA,UAAW+F,GACPP,K,gGC6BDS,EAtCyC,SAAC,GASpD,EAPGb,KAOF,IANEnB,EAMH,EANGA,SAAUiC,EAMb,EANaA,gBACVlG,EAKH,EALGA,UACAmG,GAIH,EALcZ,cAKd,EAJGY,UAEGX,EAEN,iBAWKE,EAAmB,UAAM/B,IAAN,YACrB3D,GAAwB,IAE5B,OACI,2BAAOA,UAAW2D,IAAEzD,WAChB,yCACIkF,KAAM,WACNnB,SAjBa,SAACW,GAEtBX,GAAUA,EAASW,GACnBsB,GAAiBA,EAAgBtB,EAAEC,cAAcuB,UAezCpG,UAAW0F,GAEPF,IAER,0BAAMxF,UAAW2D,IAAE0C,YAClBF,GAAY,0BAAMnG,UAAW2D,IAAE4B,eAAgBY,KCmC7CG,MA1Ef,WACI,MAAwB3D,mBAAiB,IAAzC,mBAAOtB,EAAP,KAAakF,EAAb,KACMhD,EAAQlC,EAAO,GAAK,QAEpBmF,EAAY,WACVjD,EACAmB,MAAM,gFAENA,MAAMrD,IAKd,EAA8BsB,oBAAkB,GAAhD,mBAAOyD,EAAP,KAAgBK,EAAhB,KAGA,OACI,6BACI,6BADJ,cAII,yBAAKzG,UAAW2D,IAAE+C,QACd,kBAAC,EAAD,CACI1C,MAAO3C,EACPgE,aAAckB,EACdjB,QAASkB,EACTjD,MAAOA,IAIX,kBAAC,EAAD,CACIvD,UAAW2D,IAAEgD,OAKjB,kBAAC,EAAD,gBAIA,kBAAC,EAAD,CACIb,KAAG,EACHrE,QAAS+E,GAFb,WAOA,kBAAC,EAAD,CAAaI,UAAQ,GAArB,YAMA,kBAAC,EAAD,CACIR,QAASA,EACTF,gBAAiBO,GAFrB,cAQA,kBAAC,EAAD,CAAeL,QAASA,EAASnC,SA/CxB,SAACW,GAAD,OAAsC6B,EAAW7B,EAAEC,cAAcuB,aAkD9E,6BAKA,+B,kGCIGS,EA1D4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACAzB,EAKH,EALGA,QACA0B,EAIH,EAJGA,UAEGxB,EAEN,iBACD,EAAgC7C,oBAAkB,GAAlD,mBAAOsE,EAAP,KAAiBC,EAAjB,KACA,EAA+DF,GAAa,GAArEb,EAAP,EAAOA,SAAUgB,EAAjB,EAAiBA,cAAenH,EAAhC,EAAgCA,UAAcoH,EAA9C,iBAkBM7B,EAAmB,OAAN,WAAgBvF,GAEnC,OACI,yBAAKA,UAAW,mBACXiH,EAEO,kBAAC,EAAD,eACIH,WAAS,EACTC,OAnBG,SAACnC,GACnBsC,GAAY,GAEbH,GAAUA,EAAOnC,IAiBDU,QAzBI,WACnB4B,GAAY,GAEb5B,GAAWA,MAwBSE,IAGR,wCACI2B,cArBU,SAACvC,GAC3BsC,GAAY,GAEZC,GAAiBA,EAAcvC,IAmBf5E,UAAWuF,GAEP6B,GAGHjB,GAAYX,EAAUxB,SCrExC,SAASqD,GAAapF,EAAaqF,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQ1F,EAAKsF,GAIvB,SAASK,GAAgB3F,EAAa4F,GACzC,IAAIP,EAAQO,EACNN,EAAgBG,aAAaI,QAAQ7F,GAE3C,OADsB,OAAlBsF,IAAwBD,EAAQE,KAAKO,MAAMR,IACxCD,EAWXD,GAAqB,OAAQ,CAACW,EAAG,IAAKC,EAAG,IAGhBL,GAAwB,OAAQ,CAACI,EAAG,GAAIC,EAAG,I,MCmBrDC,OAvCf,WACI,MAA0BvF,mBAAiB,IAA3C,mBAAOqB,EAAP,KAAcmE,EAAd,KAUA,OACI,yBAAKnI,UAAW,cACZ,6BADJ,cAKI,yBAAKA,UAAW,cAChB,yBAAKA,UAAW,cACZ,kBAAC,EAAD,CACIgE,MAAOA,EACPqB,aAAc8C,EACdnB,UAAW,CAACb,SAAUnC,OAAQoE,EAAY,oBAG9C,yBAAKpI,UAAW,gBACpB,kBAAC,EAAD,CAAayB,QAvBR,WACT4F,GAAkB,sBAAuBrD,KAsBrC,QACA,kBAAC,EAAD,CAAavC,QArBL,WACZ,IAAI4G,EAAYT,GAAa,sBAAsB5D,GACnDmE,EAASE,KAmBL,aAMA,+B,2CCPGC,GAvBqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,QACAtE,EAGH,EAHGA,SAAUuE,EAGb,EAHaA,eACPhD,EAEN,kBACKiD,EAAuBF,EAAUA,EAAQxG,KAAI,SAAC2G,EAAGC,GAAJ,OAC/C,4BAAQ3E,MAAO0E,EAAGzG,IAAK0G,GAAID,MAC3B,GAOJ,OACI,0CAAQzE,SANa,SAACW,GACrBX,GAAYA,EAASW,GACtB4D,GAAkBA,EAAe5D,EAAEC,cAAcb,SAITwB,GACnCiD,I,yECuBEG,GAtCmC,SAAC,GAO9C,EALGxD,KAKF,IALQzE,EAKT,EALSA,KACN4H,EAIH,EAJGA,QAASvE,EAIZ,EAJYA,MACTC,EAGH,EAHGA,SAAUuE,EAGb,EAHaA,eAIRK,GADL,kBACwB,SAACjE,GACtBX,GAAYA,EAASW,GACrB4D,GAAkBA,EAAe5D,EAAEC,cAAcb,SAK/CyE,EAAuBF,EAAUA,EAAQxG,KAAI,SAAC2G,EAAGC,GAAJ,OAE/C,2BAAO3I,UAAW,YAAaiC,IAAKtB,EAAO,IAAMgI,GAAID,EAEjD,2BAAO1I,UAAW,eACdoF,KAAM,QACNzE,KAAMA,EACNsD,SAAU4E,EACVzC,QAASsC,IAAM1E,EACfA,MAAO0E,IAGX,0BAAM1I,UAAW,kBAEpB,GAEL,OACI,oCACKyI,ICrCPK,I,MAAqB,CAAC,IAAK,IAAK,MAsCvBC,OApCf,WACI,MAAgCpG,mBAASmG,GAAI,IAA7C,mBAAO9E,EAAP,KAAcwE,EAAd,KAEA,OACI,yBAAKxI,UAAW,kBAAhB,cAKI,yBAAKA,UAAW,kBAChB,yBAAKA,UAAW,oBACZ,kBAAC,GAAD,CACIuI,QAASO,GACT9E,MAAOA,EACPwE,eAAgBA,KAGxB,yBAAKxI,UAAW,mBACZ,kBAAC,GAAD,CACIW,KAAM,QACN4H,QAASO,GACT9E,MAAOA,EACPwE,eAAgBA,MASxB,+BCpBGQ,OAbf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCJGC,OAVf,WACI,OACI,6BACI,oCACA,gDACA,mFCHCC,GAAS,WAClB,OACI,+BCFKC,GAAU,WACnB,OACI,+BCCKC,GACG,cADHA,GAEC,mBAFDA,GAGD,iBAHCA,GAIA,kBA6BEC,OAxBf,WAEI,OACI,6BAEI,kBAAC,IAAD,KAII,kBAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAIL,QAEpD,kBAAC,IAAD,CAAOE,KAAMF,GAAiBI,OAAQ,kBAAM,kBAAC,GAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAMF,GAAaI,OAAQ,kBAAM,kBAAC,GAAD,SACxC,kBAAC,IAAD,CAAOF,KAAMF,GAAcI,OAAQ,kBAAM,kBAAC,GAAD,SAGzC,kBAAC,IAAD,CAAOF,KAAMF,GAAiBI,OAAQ,kBAAM,kBAAC,GAAD,Y,MCb7CE,OAdf,WACI,OACI,yBAAK1J,UAAW,YAChB,4BAAQA,UAAW,WAAnB,cACI,yBAAKA,UAAW,qBAChB,kBAAC,IAAD,CAASA,UAAW,cAAeyJ,GAAIL,IAAvC,UACA,kBAAC,IAAD,CAASpJ,UAAW,cAAeyJ,GAAIL,IAAvC,UACA,kBAAC,IAAD,CAASpJ,UAAW,cAAeyJ,GAAIL,IAAvC,cCQGO,OAff,WACI,OACI,6BAEI,kBAAC,IAAD,KAEA,kBAAC,GAAD,MAEA,kBAAC,GAAD,SCOGC,OAZf,WACI,OACI,yBAAK5J,UAAW2D,IAAEiG,KAKd,kBAAC,GAAD,QCHQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASV,OACL,kBAAC,IAAMW,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAArH,GACHhB,QAAQgB,MAAMA,EAAM1C,c","file":"static/js/main.28959e24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3AXa0\",\"container\":\"Message_container__1hzwq\",\"massege_window\":\"Message_massege_window__39uFC\",\"user_name\":\"Message_user_name__kiGZz\",\"massege_text\":\"Message_massege_text__1m-66\",\"massege_time\":\"Message_massege_time__G3g2D\",\"user_icon\":\"Message_user_icon__Cq093\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_block\":\"Affairs_main_block__3ETS9\",\"text_block\":\"Affairs_text_block__24UVQ\",\"flex_btn\":\"Affairs_flex_btn__2rnO2\",\"btn\":\"Affairs_btn__3cWdP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__Cl1wt\",\"container_main\":\"Greeting_container_main__tHEH8\",\"input_btn_container\":\"Greeting_input_btn_container__1vAMy\",\"no_error\":\"Greeting_no_error__O0BRG\",\"error\":\"Greeting_error__3a3TG\",\"some_btn\":\"Greeting_some_btn__3aCV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line_block\":\"Affair_line_block__3OVEa\",\"text\":\"Affair_text__dpUH4\",\"delete_btn\":\"Affair_delete_btn__5niDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SuperCheckbox_container__3sA0v\",\"checkmark\":\"SuperCheckbox_checkmark__uCMjt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__mUzi_\",\"main_block\":\"SuperInputText_main_block__dMgyu\",\"errorInput\":\"SuperInputText_errorInput__3v7CG\",\"className\":\"SuperInputText_className__25ouV\",\"spanClassName\":\"SuperInputText_spanClassName__1aes_\",\"error\":\"SuperInputText_error__ZJmwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3iMvP\",\"column\":\"HW4_column__2K8XW\",\"testSpanError\":\"HW4_testSpanError__3FbM5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3ZgmC\",\"red\":\"SuperButton_red__IO8tT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__5ppBu\"};","import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\n\r\ntype MassegePropsType = {\r\n    time: string,\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n\r\n}\r\n\r\nfunction Message(props: MassegePropsType) {\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.user_icon}><img className={style.iamge_icon} src={(props.avatar)} alt=\"\"/></div>\r\n            <div className={style.arrow}></div>\r\n            <div className={style.massege_window}>\r\n                <div className={style.user_name}>{props.name}</div>\r\n                <div className={style.massege_text}>{props.message}</div>\r\n                <div className={style.massege_time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Andrei',\r\n    message: 'Нажал!!!',\r\n    time: \"16:15\"\r\n}\r\n\r\nfunction HW1( ) {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            {/*<hr/>*/}\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            {/*<hr/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport style from './Affair.module.css'\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n    return (\r\n        <div className={style.block}>\r\n            <div className={style.line_block}>\r\n                <span className={style.text}>{props.affair.name}</span>\r\n                <span className={style.text}>{props.affair.priority}</span>\r\n                <button className={style.delete_btn} onClick={deleteCallback}>X</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter : FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {\r\n        console.log('tut')\r\n        props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div  className={style.main_block}>\r\n            <div className={style.text_block}>\r\n            {mappedAffairs}\r\n            </div>\r\n                <div className={style.flex_btn}>\r\n            <button className={style.btn} onClick={setAll}>All</button>\r\n            <button className={style.btn} onClick={setHigh}>High</button>\r\n            <button className={style.btn} onClick={setMiddle}>Middle</button>\r\n            <button className={style.btn} onClick={setLow}>Low</button>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'// need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'Anime', priority: 'low'},\r\n    {_id: 3, name: 'Games', priority: 'low'},\r\n    {_id: 4, name: 'Work', priority: 'high'},\r\n    {_id: 5, name: 'HTML & CSS', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n\r\n    if (filter === 'high') {\r\n        return affairs.filter(t => t.priority === 'high')\r\n    } else if (filter === 'middle') {\r\n        return affairs.filter(t => t.priority === 'middle')\r\n    } else if (filter === 'low') {\r\n        return affairs.filter(t => t.priority === 'low')\r\n    } else {\r\n        return affairs\r\n    }\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(f => f._id !== _id)\r\n\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    console.log('affairs', filteredAffairs)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent,KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: boolean // need to fix any\r\n    totalUsers: any // need to fix any\r\n    keyPress: (e:KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, keyPress} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.no_error // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.container_main}>\r\n            <span className={s.counter_users}>{totalUsers}</span>\r\n            <div className={s.input_btn_container}>\r\n            <input value={name} onChange={setNameCallback} className={inputClass} onKeyPress={keyPress}/>\r\n            <button className={s.some_btn} onClick={addUser}>add</button></div>\r\n            <span className={s.error_class}>{error ? \"Stop, Repeat please\": \"\"}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<boolean>(false) // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value.trim())\r\n        setError(false)\r\n    }\r\n\r\n    const keyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\")\r\n            addUser()\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (name !== \"\") {\r\n            alert(`Hello ${name} !`)\r\n            addUserCallback(name)\r\n            setError(false)\r\n        } else {\r\n            setError(true)\r\n        }\r\n        setName(\"\")\r\n    }\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n\r\n\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            keyPress={keyPress}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string  // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string ) => {// need to fix any\r\n        const newUser:UserType = { _id: v1(), name: name}\r\n        setUsers([newUser, ...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.main_block}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={\"name\"}\r\n\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange&&onChange(e)\r\n        onChangeChecked&&onChangeChecked(e.currentTarget.checked)\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s\r\n    } ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.container}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span className={s.checkmark}></span>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n            //123\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport \"./SuperEditableSpan.css\"\r\n\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n         setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n         setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'text'} ${className}`\r\n\r\n    return (\r\n        <div className={\"main_span_block\"}>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\nimport \"./HW6.css\"\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        let lastValue = restoreState('editable-span-value',value)\r\n        setValue(lastValue)\r\n    }\r\n\r\n    return (\r\n        <div className={\"main_block\"}>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div className={\"text_block\"}>\r\n            <div className={\"text_input\"} >\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n                <div className={\"button_block\"}>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o, i) =>(\r\n        <option value={o} key={i}>{o}</option>\r\n    )): []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n         onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps, useState} from 'react'\r\nimport \"./radio.css\"\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\n//const [cheked, setCheked] = useState<boolean>(false)\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n\r\n        <label className={\"container\"} key={name + '-' + i}>{o}\r\n\r\n            <input className={\"custom-radio\"}\r\n                type={\"radio\"}\r\n                name={name}\r\n                onChange={onChangeCallback}\r\n                checked={o === value}\r\n                value={o}\r\n                // name, checked, value, onChange\r\n            />\r\n            <span className={\"checkmark\"}></span>\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\nimport \"./HW7.css\"\r\n\r\n\r\n\r\n\r\nconst arr: Array<string> = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[0])\r\n\r\n    return (\r\n        <div className={\"container_main\"}>\r\n\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div className={\"container_flex\"}>\r\n            <div className={\"select_contsiner\"}>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div className={\"radio_container\"}>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            </div>\r\n\r\n\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\nimport HW7 from \"../../h7/HW7\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n            <HW7/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\n\r\n\r\n\r\nexport const Junior = () => {\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\n\r\nexport const JunPlus = () => {\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport {Junior} from \"./pages/Junior\";\r\nimport {JunPlus} from \"./pages/JunPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    Error404: './pages/Error404',\r\n    JUNIOR: \"./pages/Junior\",\r\n    JunPlus: \"./pages/JunPlus\"\r\n    // add paths\r\n}\r\n\r\n\r\nfunction Routes() {\r\n\r\n    return (\r\n        <div>\r\n            {/* Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*  в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\r\n            exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JunPlus} render={() => <JunPlus/>}/>\r\n                {/*             // add routes\r\n            у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route path={PATH.Error404 }  render={() => <Error404/>}/>\r\n\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Routes\";\r\nimport \"./header.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={\"dropdown\"}>\r\n        <button className={\"dropbtn\"} > Hover me </button>\r\n            <div className={\"dropdown-content \"}>\r\n            <NavLink className={\"header_link\"} to={PATH.PRE_JUNIOR}>PreJun</NavLink>\r\n            <NavLink className={\"header_link\"} to={PATH.JUNIOR}>Junior</NavLink>\r\n            <NavLink className={\"header_link\"} to={PATH.JunPlus}>JunPlus</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n        {/*    <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>*/}\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}